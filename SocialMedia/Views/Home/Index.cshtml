@using Microsoft.AspNetCore.Identity
@using SocialMedia.Data
@inject SignInManager<ApplicationUser> SignInManager
@model List<SocialMedia.ViewModels.Image.ImageViewModel>

@{
    ViewData["Title"] = "Home Page";
}
<link rel="stylesheet" href="//use.fontawesome.com/releases/v5.0.7/css/all.css">

<div class="mx-auto" style="width: 360px;">
    @if (SignInManager.IsSignedIn(User))
    {
        <input type="hidden" class="profil-id" value="@SignInManager.UserManager.GetUserAsync(this.User).Result.Profil.id" />
    }
    @foreach (var item in Model.OrderByDescending(x => x.CreatedOn).ToList())
    {



        @*<div class="col-sm-4 border">

                <a asp-controller="Profil" asp-action="OpenProfil" asp-route-id="@item.Profil.id">
                    <h3>@item.Profil.UserName</h3>
                    <div class="text-center">
                        <img src="~/images/ProfilImage/@item.Profil.UserName/@item.Id.@item.Extension" alt="Alternate Text" width="100%" class="rounded" />
                    </div>

                </a>
            </div>*@
        <div class="card" style="width: 30rem;  margin-top: 20px !important">
            <a asp-controller="Profil" asp-action="OpenProfil" asp-route-id="@item.Profil.id">

                <h5 class="font-italic">@item.Profil.UserName</h5>
                <img class="card-img-top" src="~/images/ProfilImage/@item.Profil.UserName/@item.Id.@item.Extension" alt="Card image cap">
                <input type="hidden" class="img-id" value="@item.Id" />

            </a>
            <div class="card-body">
                <p class="card-text">@item.Description</p>
            </div>

            @*<i class="far fa-thumbs-up"></i>*@
            @if (SignInManager.IsSignedIn(User))
            {
                <nav>
                    <button class="btn btn-primary btn-lg button-like" type="button"><i class="fas fa-thumbs-up" style="font-size:25px"> @item.Likes.Count()</i></button>

                    <button class="btn btn-primary btn-lg button-comments"type="button">  <i class="fas fa-comments" style="font-size:25px"> @item.Comments.Count()</i></button>
                </nav>

                @*<button type="submit" class="button-comments bnt btn-primary">Comments</button>*@

            }

        </div>


        <div style=" margin-top: 10 !important;">

        </div>
    }


</div>

<script>
    //let likeElement = document.querySelectorAll('.button-likee')[0].addEventListener('click', e => {

    //    console.log(e.currentTarget)
    //})

    let likeButton = document.querySelectorAll('.button-like').forEach(x => x.addEventListener('click', function (e) {

        let divElement = e.currentTarget.parentNode.parentNode;
        let imgid = divElement.getElementsByClassName('img-id')[0].value
        var profilIdLiked = document.getElementsByClassName('profil-id')[0].value;


        fetch('FeatureImage/LikeImage',
            {
                method: 'POST',
                headers: {
                    'Accept': 'application/json; charset=utf-8',
                    'Content-Type': 'application/json;charset=UTF-8'
                },
                body: JSON.stringify([imgid, profilIdLiked])
            })
            .then(x => x.json())
            .then(x => {

                let likesElement = divElement.getElementsByClassName('button-like')[0].querySelectorAll('i')[0];

                likesElement.innerHTML = ' ' + x.count
            }
            )

    }))

</script>
<script>


    let buttonElement = document
        .querySelectorAll('.button-comments')
        .forEach(x => x.addEventListener('click', function (e) {
            let formElement = document.createElement('form');

            let textareaElement = document.createElement('textarea');
            formElement.appendChild(textareaElement)

            let buttonElement = document.createElement('button');
            buttonElement.innerHTML = 'Коментирай'
            buttonElement.classList.add('button-send-comment')
            formElement.appendChild(buttonElement)

            var divElement = e.currentTarget.parentNode.parentNode;

            var imgId = divElement.getElementsByClassName('img-id')[0].value;

            fetch(`FeatureImage/GetComments?ImgId=${imgId}`,
                {
                    headers: {
                        'Accept': 'application/json; charset=utf-8',
                        'Content-Type': 'application/json;charset=UTF-8'
                    }

                })
                .then(x => x.json())
                .then(x => {

                    let count = x[0].comments.length;


                    let divElementForComments = document.createElement('div');
                    divElementForComments.innerHTML = 'Коментари';
                    divElementForComments.classList.add('list-group');
                    x[0].comments.forEach(x => {

                        let path = '/Profil/OpenProfil/';
                        let aElement = document.createElement('a');
                        aElement.innerHTML = 'from ' + x.username + ' : ' + x.content;
                        aElement.classList.add('list-group-item');
                        aElement.classList.add('list-group-item-action');

                        aElement.setAttribute('href', path + x.commentingId);

                        divElementForComments.appendChild(aElement);

                    })

                    divElement.appendChild(divElementForComments)
                })
                .catch(x => console.log(x))



            buttonElement.addEventListener('click', function (e) {
                e.preventDefault();


                var content = textareaElement.value;
                //var imgId = divElement.getElementsByClassName('img-id')[0].value;
                var profilIdCommented = document.getElementsByClassName('profil-id')[0].value;

                let divCommentsElement = e.currentTarget.parentNode.parentNode.parentNode.getElementsByClassName('list-group')[0]

                fetch('FeatureImage/AddComment',
                    {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/json; charset=utf-8',
                            'Content-Type': 'application/json;charset=UTF-8'
                        },
                        body: JSON.stringify([imgId, content, profilIdCommented])
                    })
                    .then(x => x.json())
                    .then(x => {

                        let path = '/Profil/OpenProfil/';
                        let aElement = document.createElement('a');
                        aElement.innerHTML = 'from ' + x.username + ' : ' + x.content;
                        aElement.classList.add('list-group-item');
                        aElement.classList.add('list-group-item-action');

                        aElement.setAttribute('href', path + x.commentingId);

                        divCommentsElement.appendChild(aElement);

                    })




                formElement.remove();
            })

            e.currentTarget.parentNode.appendChild(formElement)

            e.currentTarget.remove();

        }));


</script>