@using Microsoft.AspNetCore.Identity
@using SocialMedia.Data
@model SocialMedia.ViewModels.Profil.ProfilViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    var image = Model.Images.Where(x => x.ProfilImage).Select(x => new
    {
        Id = x.Id,
        Extension = x.Extension
    }).FirstOrDefault();
    this.ViewData["Title"] = "Profil";
}


<input type="hidden" name="name" value="@Model.id" id="profilId" />
<div class="container">
    <div class="main-body">
        <nav aria-label="breadcrumb" class="main-breadcrumb">
            <a asp-controller="Gallery" asp-action="Index" asp-route-id="@Model.id" class="btn btn-outline-success " type="button">Галерия</a>
        </nav>
        <div class="row gutters-sm">
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex flex-column align-items-center text-center">
                            @if (Model.Images.Count == 0 || image == null)
                            {

                            }
                            else
                            {
                                <img src="~/images/ProfilImage/@Model.UserName/@image.Id.@image.Extension" alt="Admin" class="rounded-circle" width="150">
                            }
                            <div class="mt-3">
                                <h4>@Model.UserName</h4>
                                @if (SignInManager.UserManager.GetUserId(this.User) != Model.ApplicationUserId)
                                {
                                    <a class="btn btn-outline-primary" asp-controller="Messages" asp-action="SendMessages" asp-route-id="@Model.id">Съобщение</a>
                                    <a class="btn btn-outline-primary" id="realTimeChat">Чат</a>
                                    <button class="btn btn-primary">Follow</button>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <a asp-area="Administration" asp-controller="Admin" asp-action="RealDeleteProfil" asp-route-profilId="@Model.id" class="btn btn-danger " type="button">Delete</a>
                                    }

                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mt-3">
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Пол</h6>
                            <span class="text-secondary">@Model.Gender</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Харесва</h6>
                            <span class="text-secondary">@Model.Likes</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Години</h6>
                            <span class="text-secondary">@Model.Age</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Град</h6>
                            <span class="text-secondary">@Model.From</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Височина</h6>
                            <span class="text-secondary">@Model.Height</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Кг</h6>
                            <span class="text-secondary">@Model.Weight</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Търси</h6>
                            <span class="text-secondary">@Model.Likes</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Цвят на очите</h6>
                            <span class="text-secondary">@Model.EyesColor</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Цвят на косата</h6>
                            <span class="text-secondary">@Model.HairColor</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Статус</h6>
                            <span class="text-secondary">@Model.Status</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Цигари</h6>
                            <span class="text-secondary">@Model.Cigarettes</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center flex-wrap">
                            <h6 class="mb-0"><circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line>Алокохол</h6>
                            <span class="text-secondary">@Model.Alcohol</span>
                        </li>
                    </ul>
                    @if (SignInManager.UserManager.GetUserId(this.User) == Model.ApplicationUserId)
                    {
                        <div class="row">
                            <div class="col-sm-12">
                                <a class="btn btn-info " target="__blank" asp-controller="Profil" asp-action="Edit" asp-route-id="@Model.ApplicationUserId">Edit</a>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="col-md-8">
                <partial name="ImagesPartial" model="@Model.Images" />
            </div>
        </div>
    </div>

</div>

@section Scripts {

    <script>
        var connection =
            new signalR.HubConnectionBuilder()
                .withUrl("/chatter")
                .build();

        connection.on("NewMessage",
            function (message) {
                var chatInfo = `<div>[${message.user}] ${escapeHtml(message.text)}</div>`;
                $("#messagesList").append(chatInfo);
            });

        document
            .getElementById('realTimeChat')
            .addEventListener('click', function (e) {
                let textareaElement = document.createElement("textarea");
                textareaElement.setAttribute('id', 'messageInput');
                e.currentTarget.parentElement.appendChild(textareaElement);
                let buttonElement = document.createElement("button");
                buttonElement.innerHTML = "Send"
                buttonElement.setAttribute('id', 'sendButton');
                buttonElement.setAttribute('type', 'button')
                e.currentTarget.parentElement.appendChild(buttonElement);

                e.currentTarget.remove();

                $("#sendButton").click(function (event) {

                    console.log(event);
                    var message = $("#messageInput").val();
                    var recipientProfilId = $("#profilId").val();
                    //todoo
                    var chatInfo = `<div>[me] ${escapeHtml(message)}</div>`;
                    $("#messagesList").append(chatInfo);

                    var data = message + '<>=!' + recipientProfilId;
                    console.log(data)
                    connection.invoke("SendToOneProfil", data);
                    $("#messageInput").val("");

                });

                connection.start().catch(function (err) {
                    return console.error(err.toString());
                });

                function escapeHtml(unsafe) {
                    return unsafe
                        .replace(/&/g, "&amp;")
                        .replace(/</g, "&lt;")
                        .replace(/>/g, "&gt;")
                        .replace(/"/g, "&quot;")
                        .replace(/'/g, "&#039;");
                }

            })
    </script>
}